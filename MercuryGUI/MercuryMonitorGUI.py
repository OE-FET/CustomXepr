# -*- coding: utf-8 -*-

"""
Created on Tue Aug 23 11:03:57 2016

@author: Sam Schott  (ss2151@cam.ac.uk)

(c) Sam Schott; This work is licensed under a Creative Commons
Attribution-NonCommercial-NoDerivs 2.0 UK: England & Wales License.

"""
# =============================================================================
# Defines the user interface for MercuryMonitorApp
# Large parts of the file have been automaticaaly generated by QtDesigner
# =============================================================================


from qtpy import QtCore, QtWidgets
from HelpFunctions import LedIndicator


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 664)  # set size of window

        # create menu bar
        self.menubar = self.menuBar()
        self.fileMenu = self.menubar.addMenu('&File')
        self.mercuryMenu = self.menubar.addMenu('&MercuryiTC')

        # define menu bar actions
        self.exitAction = QtWidgets.QAction(' Exit', self)
        self.exitAction.setShortcut('Ctrl+Q')
        self.exitAction.setStatusTip('Exit application')

        self.showLogAction = QtWidgets.QAction('Show logs', self)
        self.showLogAction.setShortcut('Ctrl+L')
        self.showLogAction.setStatusTip('Open temperature log folder')

        self.showLogAction = QtWidgets.QAction('Show logs', self)
        self.showLogAction.setShortcut('Ctrl+L')
        self.showLogAction.setStatusTip('Open temperature log folder')

        self.modulesAction = QtWidgets.QAction('Select modules', self)
        self.modulesAction.setShortcut('Ctrl+M')
        self.modulesAction.setStatusTip('Select modules for MercuryiTC to control')

        self.readingsAction = QtWidgets.QAction('Readings overview', self)
        self.readingsAction.setShortcut('Ctrl+R')
        self.readingsAction.setStatusTip('Shows overview over all MercuryiTC readings')

        self.connectAction = QtWidgets.QAction('Connect Mercury', self)
        self.connectAction.setStatusTip('Connect to MercuryiTC')

        self.disconnectAction = QtWidgets.QAction('Disconnect Mercury', self)
        self.disconnectAction.setStatusTip('Disconnect from MercuryiTC')

        self.updateAddressAction = QtWidgets.QAction('Connection settings', self)

        # add actions to menu bars
        self.fileMenu.addAction(self.showLogAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.exitAction)

        self.mercuryMenu.addAction(self.modulesAction)
        self.mercuryMenu.addAction(self.readingsAction)

        self.mercuryMenu.addSeparator()

        self.mercuryMenu.addAction(self.connectAction)
        self.mercuryMenu.addAction(self.disconnectAction)

        self.mercuryMenu.addSeparator()

        self.mercuryMenu.addAction(self.updateAddressAction)

        # create central widget
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # lay out GUI as grid
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")

        # create labels for input fields
        self.gf1_unit = QtWidgets.QLabel(self.centralwidget)
        self.gf1_unit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.gf1_unit.setObjectName("gf1_unit")
        self.gridLayout.addWidget(self.gf1_unit, 5, 2, 1, 1)

        self.h1_unit = QtWidgets.QLabel(self.centralwidget)
        self.h1_unit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.h1_unit.setObjectName("h1_unit")
        self.gridLayout.addWidget(self.h1_unit, 7, 2, 1, 1)

        self.t1_unit = QtWidgets.QLabel(self.centralwidget)
        self.t1_unit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.t1_unit.setObjectName("t1_unit")
        self.gridLayout.addWidget(self.t1_unit, 4, 2, 1, 1)

        self.h1_label = QtWidgets.QLabel(self.centralwidget)
        self.h1_label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.h1_label.setObjectName("h1_label")
        self.gridLayout.addWidget(self.h1_label, 7, 0, 1, 1)

        self.t1_label = QtWidgets.QLabel(self.centralwidget)
        self.t1_label.setMinimumSize(QtCore.QSize(110, 0))
        self.t1_label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.t1_label.setObjectName("t1_label")
        self.gridLayout.addWidget(self.t1_label, 2, 0, 1, 1)

        self.gf2_label = QtWidgets.QLabel(self.centralwidget)
        self.gf2_label.setObjectName("gf2_label")
        self.gridLayout.addWidget(self.gf2_label, 5, 4, 1, 1)

        self.t2_label = QtWidgets.QLabel(self.centralwidget)
        self.t2_label.setMinimumSize(QtCore.QSize(150, 0))
        self.t2_label.setObjectName("t2_label")
        self.gridLayout.addWidget(self.t2_label, 2, 4, 1, 1)

        self.h2_label = QtWidgets.QLabel(self.centralwidget)
        self.h2_label.setObjectName("h2_label")
        self.gridLayout.addWidget(self.h2_label, 7, 4, 1, 1)

        self.r2_label = QtWidgets.QLabel(self.centralwidget)
        self.r2_label.setObjectName("r2_label")
        self.gridLayout.addWidget(self.r2_label, 4, 4, 1, 1)

        self.r1_label = QtWidgets.QLabel(self.centralwidget)
        self.r1_label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.r1_label.setObjectName("r1_label")
        self.gridLayout.addWidget(self.r1_label, 4, 0, 1, 1)

        self.gf1_label = QtWidgets.QLabel(self.centralwidget)
        self.gf1_label.setMinimumSize(QtCore.QSize(160, 0))
        self.gf1_label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.gf1_label.setObjectName("gf1_label")
        self.gridLayout.addWidget(self.gf1_label, 5, 0, 1, 1)

        # create input fields and check boxes
        self.h1_edit = CLineEdit(self.centralwidget)
        self.h1_edit.setMinimumSize(QtCore.QSize(50, 0))
        self.h1_edit.setMaximumSize(QtCore.QSize(80, 16777215))
        self.h1_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.h1_edit.setObjectName("h1_edit")
        self.gridLayout.addWidget(self.h1_edit, 7, 1, 1, 1)

        self.r2_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.r2_checkbox.setText("")
        self.r2_checkbox.setAutoRepeat(False)
        self.r2_checkbox.setAutoRepeatDelay(197)
        self.r2_checkbox.setObjectName("r2_checkbox")
        self.gridLayout.addWidget(self.r2_checkbox, 4, 5, 1, 1, QtCore.Qt.AlignHCenter)

        self.h2_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.h2_checkbox.setText("")
        self.h2_checkbox.setObjectName("h2_checkbox")
        self.gridLayout.addWidget(self.h2_checkbox, 7, 5, 1, 1, QtCore.Qt.AlignHCenter)

        self.t2_edit = CLineEdit(self.centralwidget)
        self.t2_edit.setMinimumSize(QtCore.QSize(50, 0))
        self.t2_edit.setMaximumSize(QtCore.QSize(80, 16777215))
        self.t2_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.t2_edit.setObjectName("t2_edit")
        self.gridLayout.addWidget(self.t2_edit, 2, 5, 1, 1)

        self.r1_edit = CLineEdit(self.centralwidget)
        self.r1_edit.setMinimumSize(QtCore.QSize(50, 0))
        self.r1_edit.setMaximumSize(QtCore.QSize(80, 16777215))
        self.r1_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.r1_edit.setObjectName("r1_edit")
        self.gridLayout.addWidget(self.r1_edit, 4, 1, 1, 1)

        self.gf1_edit = CLineEdit(self.centralwidget)
        self.gf1_edit.setMinimumSize(QtCore.QSize(50, 0))
        self.gf1_edit.setMaximumSize(QtCore.QSize(80, 16777215))
        self.gf1_edit.setAutoFillBackground(False)
        self.gf1_edit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.gf1_edit.setObjectName("gf1_edit")
        self.gridLayout.addWidget(self.gf1_edit, 5, 1, 1, 1)

        self.t1_reading = QtWidgets.QLabel(self.centralwidget)
        self.t1_reading.setMinimumSize(QtCore.QSize(70, 0))
        self.t1_reading.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.t1_reading.setObjectName("t1_reading")
        self.gridLayout.addWidget(self.t1_reading, 2, 1, 1, 1)

        self.gf2_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.gf2_checkbox.setText("")
        self.gf2_checkbox.setObjectName("gf2_checkbox")
        self.gridLayout.addWidget(self.gf2_checkbox, 5, 5, 1, 1, QtCore.Qt.AlignHCenter)
        self.t2_unit = QtWidgets.QLabel(self.centralwidget)

        # general layout settings and size policies
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.t2_unit.sizePolicy().hasHeightForWidth())

        self.t2_unit.setSizePolicy(sizePolicy)
        self.t2_unit.setMaximumSize(QtCore.QSize(10, 16777215))
        self.t2_unit.setObjectName("t2_unit")
        self.gridLayout.addWidget(self.t2_unit, 2, 6, 1, 1)

        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setStyleSheet("font: 20pt \"Helvetica\";")
        self.Title.setTextFormat(QtCore.Qt.AutoText)
        self.Title.setObjectName("Title")
        self.gridLayout.addWidget(self.Title, 1, 0, 1, 7)

        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setMaximumSize(QtCore.QSize(50, 16777215))
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 2, 2, 1, 1)

        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 5, 3, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 2, 7, 1, 1)

        # create message display area
#        self.labelMessages = QtWidgets.QLabel(self.centralwidget)
#        font = QtGui.QFont()
#        font.setItalic(True)
#        self.labelMessages.setFont(font)
#        self.labelMessages.setStyleSheet("color: green;")
#        self.labelMessages.setText("")
#        self.labelMessages.setObjectName("labelMessages")
#        self.gridLayout.addWidget(self.labelMessages, 9, 0, 1, 8)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 12, 0, 1, 8)

        # create slider for temperature plot
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setMinimum(1)
        self.horizontalSlider.setMaximum(1440)
        self.horizontalSlider.setSingleStep(1)
        self.horizontalSlider.setPageStep(2)
        self.horizontalSlider.setProperty("value", 1)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.horizontalSlider.setTickInterval(60)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.gridLayout.addWidget(self.horizontalSlider, 13, 0, 1, 8)

        # create Matplotlib widget
        self.mplwindow = QtWidgets.QWidget(self.centralwidget)
        self.mplwindow.setObjectName("mplwindow")
        self.mplwindow.setMinimumSize(QtCore.QSize(100, 100))

        self.mplvl = QtWidgets.QVBoxLayout(self.mplwindow)
        self.mplvl.setContentsMargins(0, 0, 0, 0)
        self.mplvl.setObjectName("mplvl")
        self.gridLayout.addWidget(self.mplwindow, 10, 0, 1, 8)

        MainWindow.setCentralWidget(self.centralwidget)

        # activate status bar
        self.statusBar = QtWidgets.QStatusBar()
        self.setStatusBar(self.statusBar)

        # create LED indicator
        self.led = LedIndicator(self)
        self.led.setDisabled(True)  # Make the led non clickable
        self.statusBar.addPermanentWidget(self.led)
        self.led.setChecked(False)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MercuryiTC Monitor"))
        self.gf1_unit.setText(_translate("MainWindow", "%"))
        self.h1_unit.setText(_translate("MainWindow", "%"))
        self.t1_unit.setText(_translate("MainWindow", "K/min"))
        self.h1_label.setText(_translate("MainWindow", "Heater:"))
        self.t1_label.setText(_translate("MainWindow", "Current temperature:"))
        self.gf2_label.setText(_translate("MainWindow", "Auto gas flow:"))
        self.t2_label.setText(_translate("MainWindow", "Temperature setpoint:"))
        self.h2_label.setText(_translate("MainWindow", "Auto heater:"))
        self.r2_label.setText(_translate("MainWindow", "Temperature ramp:"))
        self.r1_label.setText(_translate("MainWindow", "Temperature ramp:"))
        self.gf1_label.setText(_translate("MainWindow", "Gas flow:"))
        self.h1_edit.setText(_translate("MainWindow", "--"))
        self.t2_edit.setText(_translate("MainWindow", "--"))
        self.r1_edit.setText(_translate("MainWindow", "--"))
        self.gf1_edit.setText(_translate("MainWindow", "--"))
        self.t1_reading.setText(_translate("MainWindow", "--"))
        self.t2_unit.setText(_translate("MainWindow", "K"))
        self.Title.setText(_translate("MainWindow", "Mercury iTC readings:"))
        self.label_7.setText(_translate("MainWindow", "K"))
        self.label.setText(_translate("MainWindow", "Time interval to display: 60 min"))


class CLineEdit(QtWidgets.QLineEdit):
    def __init__(self, parent=None):
        super(CLineEdit, self).__init__(parent)

    def updateText(self, text):
        if not self.hasFocus():
            self.setText(text)
        else:
            pass
